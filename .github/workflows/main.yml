name: MyTriggeredAction

on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  # Connect to Bastion
  bastion_connect:
    runs-on: ubuntu-latest
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.BASTION_PRIVATE_KEY }}

      - name: SSH into Bastion
        run: |
          ssh -o StrictHostKeyChecking=no -A bastion-user@bastion-host.com << 'EOF'
            exit
          EOF

  # Deploy using Ansible on Private Instance (requires bastion_connect to succeed)
  deploy_with_ansible:
    runs-on: ubuntu-latest
    needs: bastion_connect
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Set up SSH agent (inherit from bastion_connect)
        uses: inherit

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Ansible
        run: |
          python -m pip install ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ./Deployment/playbooks/main.yml -e @./Deployment/inventory.py

  # Run Python Script (requires deploy_with_ansible to succeed)
  run_python_script:
    runs-on: ubuntu-latest
    needs: deploy_with_ansible
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Set environment variables
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          REGION: ${{ secrets.REGION }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          # Consider not storing entire private key as a secret
          PRIVATE_KEY: ${{ secrets.INSTANCE_PRIVATE_KEY }}
        run: |
          true

      - name: Run Python script
        run: |
          python ./Deployment/playbooks/python_pgm.py